tf-fmt:
  stage: terraform:check
  extends: .base-terraform
  script:
    - terraform fmt -check -recursive terraform/
  needs: []
  
tf-validate:
  stage: terraform:check
  extends: .base-terraform
  script: |
      terraform -chdir=terraform/production init -input=false -backend-config="access_key=$TF_VAR_access_key" -backend-config="secret_key=$TF_VAR_secret_key" 
      terraform -chdir=terraform/production validate 
  needs: []

stages:
  - terraform:check
  - terraform:plan
  - terraform:apply

.base-terraform:
  image: 
    name: "hashicorp/terraform"
    entrypoint: [""]
  before_script:
    # set the aws service account credentials from the variables
    - export TF_VAR_access_key="AKIAW6SGPZFHSCMTXHEE"
    - export TF_VAR_secret_key="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"
    - terraform version
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH
      changes:
      - terraform/**
tf-plan:
  stage: terraform:plan
  extends: .base-terraform
  variables:
    STACK: "terraform/production"
    WORKSPACE: default 
    VARS: "-var-file=terraform/production/badams.tfvars"
  script:
    - terraform -chdir=${STACK} init -input=false -backend-config="access_key=$TF_VAR_access_key" -backend-config="secret_key=$TF_VAR_secret_key"
    - terraform workspace select ${WORKSPACE} 
    - terraform plan -out=${WORKSPACE}.tfplan ${VARS}
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH
      changes:
        - terraform/**
        - my.tfvars
  artifacts:
    name: ${WORKSPACE}
    paths:
      - ./*.tfplan
      - .terraform
    expire_in: 1 week

tf-apply:
  stage: terraform:apply
  extends: .base-terraform
  variables:
    PLAN_FILE: badams.tfplan
  script:
    - terraform apply -auto-approve ${PLAN_FILE}
  environment:
    name: aws 
  rules:
    - if: $CI_COMMIT_BRANCH == "master" || $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - terraform/**
        - my.tfvars   
      when: manual
